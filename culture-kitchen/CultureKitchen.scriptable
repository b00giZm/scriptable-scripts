{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "purple",
    "glyph" : "utensils"
  },
  "name" : "CultureKitchen",
  "script" : "const formatDate = (time = 0) => (new Date(time)).toISOString().split('T')[0];\nconst today = formatDate((new Date()).getTime());\nconst tomorrow = formatDate((new Date()).getTime() + 24*60*60*1000);\nconst inDays = days => formatDate((new Date()).getTime() + days*24*60*60*1000);\n\nconst fn = (date) => {\n    let dishes = [];\n    ['foodtruck', 'europe', 'asia-india'].forEach(counter => {\n        const selector = `[id*='${date}'] [data-category-container='${counter}']`;\n        document\n            .querySelectorAll(selector)\n            .forEach(node => {\n                node\n                \t\t.querySelectorAll('.mt-page-link')\n                \t\t.forEach(node => {\n                \t\t\t\tconst detailId = node.dataset.id.substr(1);\n                \t\t\t\tconst detailNode = document.getElementById(detailId);\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst descriptionRaw = detailNode\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.querySelector('.dishDescriptionInner')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.innerText;\n\t\t\t\t\t\t\t\t\t\t\t\tlet match = \/(.+)approx\\.\/gm.exec(descriptionRaw);\n\t\t\t\t\t\t\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\/\/ Saladbar special rule\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmatch = \/(.+)Roll\/.exec(descriptionRaw);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tconst description = match[1].trim();\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tconst price = detailNode\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.querySelector('.dishPriceInner')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.innerText;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tconst energyRaw = detailNode\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.querySelector('.nutrition-values th:first-child + td')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.innerText;\n\t\t\t\t\t\t\t\t\t\t\t\tmatch = \/(.+)\\\/\/gm.exec(energyRaw);\n\t\t\t\t\t\t\t\t\t\t\t\tconst energy = `${match[1].trim()} per 100g`;                  \t\n                  \t\t\t\n                  \t\t\tdishes.push({ counter, description, energy, price });\n                  \t});  \n            });\n    });\n\n    return dishes;\n};\n\nconst dayOfWeek = new Date().getDay();\nconst selectedDate = (dayOfWeek == 6 || dayOfWeek == 7) ? inDays(8 - dayOfWeek) : today;\n\nconst js = `const fn = ${fn.toString()}; completion(fn(\"${selectedDate}\"));`;\nconst url = \"http:\/\/trivago.food-affairs.de\/trivago\/web-app\/\";\nconst browser = new WebView();\n\nawait browser.loadURL(url);\nconst res = await browser.evaluateJavaScript(js, true);\n\nconst table = new UITable();\nres.forEach(dish => {\n\t\tconst row = new UITableRow();\n\t\trow.addText(dish.description, `${dish.price} | ${dish.energy} | ${dish.counter}`);\n\t\ttable.addRow(row);\n});\n\ntable.present();",
  "share_sheet_inputs" : [

  ]
}